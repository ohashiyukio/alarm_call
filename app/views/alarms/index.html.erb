<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>アラーム一覧</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    .alarm-item {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      border-bottom: 1px solid #ccc;
    }
    button {
      padding: 5px 10px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>アラーム一覧</h1>
  <div id="alarmList">
    <% @alarms.each do |alarm| %>
      <div class="alarm-item">
        <span><%= alarm.alarm_time.strftime('%Y-%m-%d %H:%M') %> - <%= alarm.comment %></span>
      </div>
    <% end %>
  </div>
  <button onclick="location.href='<%= new_alarm_path %>'">新しいアラームを追加</button>
</body>
<script>
  const alarms = <%= @alarms.map { |alarm| { 
    time: alarm.alarm_time.strftime('%Y-%m-%dT%H:%M:%S'), 
    audioPath: "/alarm_#{alarm.id}.mp3", 
    comment: alarm.comment 
  } }.to_json.html_safe %>;
  console.log("アラームデータ:", alarms);

  function checkAlarms() {
    const now = new Date();
    alarms.forEach(alarm => {
      const alarmTime = new Date(alarm.time);
      if (Math.abs(now - alarmTime) < 60000) { // 1分以内で一致
        console.log("アラームがトリガーされました:", alarm.comment);

        const audio = new Audio(alarm.audioPath);
        audio.play()
          .then(() => console.log("音声再生成功:", alarm.audioPath))
          .catch(err => console.error("音声再生エラー:", err.message, alarm.audioPath));

        alert(alarm.comment);
      }
    });
  }

  // 1秒ごとにアラームをチェック
  setInterval(checkAlarms, 1000);

  document.addEventListener("click", () => {
    const dummyAudio = new Audio();
    dummyAudio.muted = true;
    dummyAudio.play()
      .then(() => console.log("音声再生が許可されました"))
      .catch(err => console.error("音声再生の初期化に失敗しました:", err));
  }, { once: true });
</script>
</html>
