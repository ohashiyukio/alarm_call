<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>アラーム一覧</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
    }
    .alarm-item {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      border-bottom: 1px solid #ccc;
    }
    button {
      padding: 5px 10px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <h1>アラーム一覧</h1>
  <div id="alarmList">
    <% @alarms.each do |alarm| %>
      <div class="alarm-item">
        <span><%= alarm.alarm_time.strftime('%Y-%m-%d %H:%M') %> - <%= alarm.comment %></span>
      </div>
    <% end %>
  </div>
  <button onclick="location.href='<%= new_alarm_path %>'">新しいアラームを追加</button>

  <script>
document.addEventListener("click", () => {
  const dummyAudio = new Audio();
  dummyAudio.muted = true; // ミュート状態で初期化
  dummyAudio.play()
    .then(() => {
      console.log("音声再生が許可されました");
    })
    .catch(err => {
      console.error("音声再生の初期化に失敗しました: ", err);
    });
}, { once: true });

    // アラームデータを取得
const alarms = <%= @alarms.map { |alarm| {
  time: alarm.alarm_time.strftime('%Y-%m-%d %H:%M:%S'),
  audioPath: "/alarm_#{alarm.id}.mp3",
  comment: alarm.comment
} }.to_json.html_safe %>;

console.log("アラームデータ: ", alarms);
// 初期ロードで音声再生の許可を得るための無音オーディオを準備
let audioContext;
let audioElement;

function initializeAudio() {
  if (!audioContext) {
    audioContext = new (window.AudioContext || window.webkitAudioContext)();
    audioElement = new Audio();
    audioElement.src = ""; // 無音ファイル（もし用意できなければ空のオーディオも可）
    const source = audioContext.createMediaElementSource(audioElement);
    source.connect(audioContext.destination);
    console.log("Audio initialized");
  }
}

// ページロード時にクリックイベントを要求
window.addEventListener('click', initializeAudio, { once: true });

function checkAlarms() {
  const now = new Date();
  alarms.forEach(alarm => {
    const alarmTime = new Date(alarm.time);
    if (
      now.getFullYear() === alarmTime.getFullYear() &&
      now.getMonth() === alarmTime.getMonth() &&
      now.getDate() === alarmTime.getDate() &&
      now.getHours() === alarmTime.getHours() &&
      now.getMinutes() === alarmTime.getMinutes()
    ) {
      console.log("Alarm triggered:", alarm.comment);
      const audio = new Audio(alarm.audioPath);

      // 音声再生の試行
      audio.play()
        .then(() => {
          console.log("音声が再生されました: ", alarm.comment);
        })
        .catch(err => {
          console.error("音声再生エラー: ", err);
          alert(`${alarm.comment}（音声の再生に失敗しました）`);
        });

      // アラートで通知
      alert(alarm.comment);
    }
  });
}

// 1分ごとにアラームをチェック
setInterval(checkAlarms, 60000);

  </script>
</body>
</html>
